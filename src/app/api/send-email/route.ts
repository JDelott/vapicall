import { NextRequest, NextResponse } from 'next/server';
import { Resend } from 'resend';

const resend = new Resend(process.env.RESEND_API_KEY);

export async function POST(request: NextRequest) {
  try {
    const { email, transcript, summary } = await request.json();
    
    if (!email) {
      return NextResponse.json(
        { error: 'Email address is required' },
        { status: 400 }
      );
    }

    if (!transcript && !summary) {
      return NextResponse.json(
        { error: 'Either transcript or summary is required' },
        { status: 400 }
      );
    }

    // Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return NextResponse.json(
        { error: 'Invalid email format' },
        { status: 400 }
      );
    }

    // Check if Resend API key is configured
    if (!process.env.RESEND_API_KEY) {
      console.error('Server: Resend API key missing');
      return NextResponse.json(
        { error: 'Email service not configured' },
        { status: 500 }
      );
    }

    // Create email content
    const currentDate = new Date().toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });

    const emailHtml = `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="utf-8">
          <title>VapiCall - Conversation Summary</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; max-width: 800px; margin: 0 auto; padding: 20px; }
            .header { background: linear-gradient(135deg, #00F5A0, #00E1C7); color: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; }
            .section { background: #f9f9f9; padding: 20px; border-radius: 8px; margin-bottom: 20px; border-left: 4px solid #00F5A0; }
            .summary { background: #e8f8f5; }
            .transcript { background: #f5f5f5; }
            h1 { margin: 0; font-size: 24px; }
            h2 { color: #00E1C7; margin-top: 0; }
            .date { opacity: 0.9; font-size: 14px; }
            .footer { text-align: center; color: #666; font-size: 12px; margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; }
            pre { white-space: pre-wrap; word-wrap: break-word; font-family: inherit; }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>VapiCall Conversation Summary</h1>
            <div class="date">Generated on ${currentDate}</div>
          </div>
          
          ${summary ? `
            <div class="section summary">
              <h2>üìã AI Generated Summary</h2>
              <pre>${summary}</pre>
            </div>
          ` : ''}
          
          ${transcript ? `
            <div class="section transcript">
              <h2>üìù Full Conversation Transcript</h2>
              <pre>${transcript}</pre>
            </div>
          ` : ''}
          
          <div class="footer">
            <p>This email was generated by VapiCall - AI Voice Assistant Platform</p>
            <p>If you have any questions about this conversation, please contact the sender.</p>
          </div>
        </body>
      </html>
    `;

    const emailText = `
VapiCall Conversation Summary
Generated on ${currentDate}

${summary ? `
AI Generated Summary:
${summary}

` : ''}${transcript ? `
Full Conversation Transcript:
${transcript}
` : ''}

---
This email was generated by VapiCall - AI Voice Assistant Platform
    `;

    // Send email using Resend
    const { data, error } = await resend.emails.send({
      from: 'VapiCall <noreply@vayacall.com>',
      to: [email],
      subject: `VapiCall Conversation Summary - ${currentDate}`,
      html: emailHtml,
      text: emailText,
    });

    if (error) {
      console.error('Resend API error:', error);
      return NextResponse.json(
        { error: 'Failed to send email: ' + error.message },
        { status: 500 }
      );
    }

    return NextResponse.json({ 
      success: true, 
      messageId: data?.id || 'email-sent',
      message: 'Email sent successfully' 
    });

  } catch (error) {
    console.error('Error sending email:', error);
    return NextResponse.json(
      { error: 'Failed to send email' },
      { status: 500 }
    );
  }
}
